<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Persistence</name>
    </assembly>
    <members>
        <member name="T:Persistence.ApplicationDbContext">
             <summary>
            
             </summary>
        </member>
        <member name="M:Persistence.ApplicationDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{Persistence.ApplicationDbContext},Microsoft.AspNetCore.Http.IHttpContextAccessor,Microsoft.Extensions.Logging.ILogger{Persistence.ApplicationDbContext})">
             <summary>
            
             </summary>
             <param name="options"></param>
             <param name="contextAccessor"></param>
             <param name="logger"></param>
        </member>
        <member name="P:Persistence.ApplicationDbContext.Settings">
            <summary>
            Gets or sets the settings.
            </summary>
            <value>
            The settings.
            </value>
        </member>
        <member name="P:Persistence.ApplicationDbContext.UnitOfMeasurements">
            <summary>
            Gets or sets the unit of measurements.
            </summary>
            <value>
            The unit of measurements.
            </value>
        </member>
        <member name="P:Persistence.ApplicationDbContext.CompanySettings">
            <summary>
            Gets or sets the company settings.
            </summary>
            <value>
            The company settings.
            </value>
        </member>
        <member name="P:Persistence.ApplicationDbContext.Employees">
            <summary>
            Gets or sets the employees.
            </summary>
            <value>
            The employees.
            </value>
        </member>
        <member name="P:Persistence.ApplicationDbContext.MailConfigurations">
            <summary>
            Gets or sets the mail configurations.
            </summary>
            <value>
            The mail configurations.
            </value>
        </member>
        <member name="P:Persistence.ApplicationDbContext.ItemTypes">
            <summary>
            Gets or sets the ItemType.
            </summary>
            <value>
            The ItemType.
            </value>
        </member>
        <member name="P:Persistence.ApplicationDbContext.ServiceTypes">
            <summary>
            Gets or sets the ItemType.
            </summary>
            <value>
            The ItemType.
            </value>
        </member>
        <member name="P:Persistence.ApplicationDbContext.Counters">
            <summary>
            Gets or sets the counters.
            </summary>
            <value>
            The counters.
            </value>
        </member>
        <member name="P:Persistence.ApplicationDbContext.FileUploads">
            <summary>
            Gets or sets the file uploads.
            </summary>
            <value>
            The file uploads.
            </value>
        </member>
        <member name="P:Persistence.ApplicationDbContext.Reasons">
            <summary>
            Gets or sets the reasons.
            </summary>
            <value>
            The reasons.
            </value>
        </member>
        <member name="P:Persistence.ApplicationDbContext.Countries">
            <summary>
            Gets or sets the countries.
            </summary>
            <value>
            The countries.
            </value>
        </member>
        <member name="P:Persistence.ApplicationDbContext.Companies">
            <summary>
            Gets or sets the companies.
            </summary>
            <value>
            The companies.
            </value>
        </member>
        <member name="P:Persistence.ApplicationDbContext.States">
            <summary>
            Gets or sets the states.
            </summary>
            <value>
            The states.
            </value>
        </member>
        <member name="P:Persistence.ApplicationDbContext.LocalGovernments">
            <summary>
            Gets or sets the LocalGovernment.
            </summary>
            <value>
            The LocalGovernment.
            </value>
        </member>
        <member name="P:Persistence.ApplicationDbContext.NotificationMessages">
            <summary>
            Gets or sets the NotificationMessages.
            </summary>
            <value>
            The NotificationMessages.
            </value>
        </member>
        <member name="P:Persistence.ApplicationDbContext.NotificationMessageTemplates">
            <summary>
            Gets or sets the NotificationMessageTemplate.
            </summary>
            <value>
            The NotificationMessageTemplate.
            </value>
        </member>
        <member name="P:Persistence.ApplicationDbContext.NotificationReceivers">
            <summary>
            Gets or sets the NotificationReceivers.
            </summary>
            <value>
            The NotificationReceivers.
            </value>
        </member>
        <member name="M:Persistence.ApplicationDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            Configures the schema needed for the identity framework.
            </summary>
            <param name="builder">The builder being used to construct the model for this context.</param>
        </member>
        <member name="M:Persistence.ApplicationDbContext.SaveChangesAsync">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Persistence.ApplicationDbContext.SaveChangesAsync(System.Threading.CancellationToken)">
            <summary>
            <para>
            Saves all changes made in this context to the database.
            </para>
            <para>
            This method will automatically call <see cref="M:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges" /> to discover any
            changes to entity instances before saving to the underlying database. This can be disabled via
            <see cref="P:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.AutoDetectChangesEnabled" />.
            </para>
            <para>
            Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
            that any asynchronous operations have completed before calling another method on this context.
            </para>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
            A task that represents the asynchronous save operation. The task result contains the
            number of state entries written to the database.
            </returns>
        </member>
        <member name="T:Persistence.Configuration.CompanySettingConfiguration">
             <summary>
            
             </summary>
             <seealso>
                 <cref>Microsoft.EntityFrameworkCore.IEntityTypeConfiguration{Domain.Entities.CompanySetting}</cref>
             </seealso>
        </member>
        <member name="M:Persistence.Configuration.CompanySettingConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{Domain.Entities.CompanySetting})">
            <summary>
            Configures the entity of type <typeparamref>
                <name>TEntity</name>
            </typeparamref>
            .
            </summary>
            <param name="builder">The builder to be used to configure the entity type.</param>
        </member>
        <member name="T:Persistence.Configuration.CounterMap">
             <summary>
            
             </summary>
        </member>
        <member name="M:Persistence.Configuration.CounterMap.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{Domain.Entities.Counter})">
            <summary>
            Configures the entity of type <typeparamref>
                <name>TEntity</name>
            </typeparamref>
            .
            </summary>
            <param name="builder">The builder to be used to configure the entity type.</param>
        </member>
        <member name="T:Persistence.Configuration.EmployeeConfiguration">
             <summary>
            
             </summary>
             <seealso>
                 <cref>Microsoft.EntityFrameworkCore.IEntityTypeConfiguration{Domain.Entities.Employee}</cref>
             </seealso>
        </member>
        <member name="M:Persistence.Configuration.EmployeeConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{Domain.Entities.Employee})">
            <summary>
            Configures the entity of type <typeparamref>
                <name>TEntity</name>
            </typeparamref>
            .
            </summary>
            <param name="builder">The builder to be used to configure the entity type.</param>
        </member>
        <member name="T:Persistence.Configuration.SettingsConfiguration">
             <summary>
            
             </summary>
             <seealso>
                 <cref>Microsoft.EntityFrameworkCore.IEntityTypeConfiguration{Domain.Entities.Settings}</cref>
             </seealso>
        </member>
        <member name="M:Persistence.Configuration.SettingsConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{Domain.Entities.Settings})">
            <summary>
            Configures the entity of type <typeparamref>
                <name>TEntity</name>
            </typeparamref>
            .
            </summary>
            <param name="builder">The builder to be used to configure the entity type.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Persistence.Configuration.UnitOfMeasurementConfiguration">
             <summary>
            
             </summary>
             <seealso>
                 <cref>Microsoft.EntityFrameworkCore.IEntityTypeConfiguration{Domain.Entities.UnitOfMeasurement}</cref>
             </seealso>
        </member>
        <member name="M:Persistence.Configuration.UnitOfMeasurementConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{Domain.Entities.UnitOfMeasurement})">
            <summary>
            Configures the entity of type <typeparamref>
                <name>TEntity</name>
            </typeparamref>
            .
            </summary>
            <param name="builder">The builder to be used to configure the entity type.</param>
        </member>
        <member name="T:Persistence.DependencyInjection">
             <summary>
            
             </summary>
        </member>
        <member name="M:Persistence.DependencyInjection.AddPersistence(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
             <summary>
            
             </summary>
             <param name="services"></param>
             <param name="configuration"></param>
        </member>
        <member name="T:Persistence.Uploads.ExcelService">
             <summary>
            
             </summary>
             <seealso cref="T:Application.Interfaces.IExcelService" />
        </member>
        <member name="M:Persistence.Uploads.ExcelService.GetDataTableFromExcel(System.String,System.Boolean)">
            <summary>
            Gets the data table from excel.
            </summary>
            <param name="path">The path.</param>
            <param name="hasHeader">if set to <c>true</c> [has header].</param>
            <returns></returns>
        </member>
        <member name="T:Persistence.Uploads.UploadService">
             <summary>
            
             </summary>
        </member>
        <member name="M:Persistence.Uploads.UploadService.#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            Initializes a new instance of the <see cref="T:Persistence.Uploads.UploadService"/> class.
            </summary>
            <param name="env">The env.</param>
        </member>
        <member name="M:Persistence.Uploads.UploadService.UploadAsBase64String(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Uploads as base64 string.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns></returns>
        </member>
        <member name="M:Persistence.Uploads.UploadService.UploadToServer(Microsoft.AspNetCore.Http.IFormFile,System.String)">
            <summary>
            Uploads to server.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="folder">The folder.</param>
            <returns></returns>
        </member>
    </members>
</doc>
